#include <iostream>
#include <stack>
using namespace std;

// Khai báo cấu trúc dữ liệu của một node trong danh sách liên kết đơn
struct Node {
    int data;
    Node* next;
};

// Hàm tạo một node mới với giá trị data
Node* taoNode(int data) {
    Node* node = new Node;
    node->data = data;
    node->next = NULL;
    return node;
}

// Hàm thêm một node vào đầu danh sách liên kết đơn
void themNode(Node*& head, Node* node) {
    if (head == NULL) {
        head = node;
    } else {
        node->next = head;
        head = node;
    }
}

// Hàm kiểm tra xem danh sách liên kết đơn có đối xứng hay không
bool kiemTraDoiXung(Node* head) {
    stack<int> st;
    Node* current = head;
    while (current != NULL) {
        st.push(current->data);
        current = current->next;
    }
    current = head;
    while (current != NULL) {
        int data = st.top();
        st.pop();
        if (current->data != data) {
            return false;
        }
        current = current->next;
    }
    return true;
}

// Hàm in danh sách liên kết đơn
void inDanhSach(Node* head) {
    Node* current = head;
    while (current != NULL) {
        cout << current->data << " ";
        current = current->next;
    }
    cout << endl;
}

// Hàm chính
int main() {
    int n;
    cin >> n;

    Node* head = NULL;
    for (int i = 0; i < n; i++) {
        int data;
       
        cin >> data;
        Node* node = taoNode(data);
        themNode(head, node);
    }

  
   

    if (kiemTraDoiXung(head)) {
        cout << "YES" << endl;
    } else {
        cout << "NO" << endl;
    }

    return 0;
}